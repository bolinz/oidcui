{"version":3,"file":"src_app_features_admin-page_admin-page_module_ts.js","mappings":"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","sources":["./src/app/features/admin-page/admin-page-routing.module.ts","./src/app/features/admin-page/admin-page.module.ts","./src/app/features/admin-page/components/admin-page/admin-page.component.ts","./src/app/features/admin-page/components/details/experiment-permission-details/experiment-permission-details.component.ts","./src/app/features/admin-page/components/details/experiment-permission-details/experiment-permission-details.component.html","./src/app/features/admin-page/components/details/experiment-permission-details/experiment-permission-details.config.ts","./src/app/features/admin-page/components/details/group-permission-details/group-permission-details.component.ts","./src/app/features/admin-page/components/details/group-permission-details/group-permission-details.component.html","./src/app/features/admin-page/components/details/group-permission-details/group-permission-details.config.ts","./src/app/features/admin-page/components/details/model-permission-details/model-permission-details.component.ts","./src/app/features/admin-page/components/details/model-permission-details/model-permission-details.component.html","./src/app/features/admin-page/components/details/model-permission-details/model-permission-details.config.ts","./src/app/features/admin-page/components/details/user-permission-details/user-permission-details.component.ts","./src/app/features/admin-page/components/details/user-permission-details/user-permission-details.component.html","./src/app/features/admin-page/components/details/user-permission-details/user-permission-details.config.ts","./src/app/features/admin-page/components/index.ts","./src/app/features/admin-page/components/permissions/experiment-permissions/experiment-permissions.component.ts","./src/app/features/admin-page/components/permissions/experiment-permissions/experiment-permissions.component.html","./src/app/features/admin-page/components/permissions/experiment-permissions/experiment-permissions.config.ts","./src/app/features/admin-page/components/permissions/group-permissions/group-permissions.component.ts","./src/app/features/admin-page/components/permissions/group-permissions/group-permissions.component.html","./src/app/features/admin-page/components/permissions/group-permissions/group-permissions.config.ts","./src/app/features/admin-page/components/permissions/model-permissions/model-permissions.component.ts","./src/app/features/admin-page/components/permissions/model-permissions/model-permissions.component.html","./src/app/features/admin-page/components/permissions/model-permissions/model-permissions.config.ts","./src/app/features/admin-page/components/permissions/permissions.component.ts","./src/app/features/admin-page/components/permissions/permissions.component.html","./src/app/features/admin-page/components/permissions/user-permissions/user-permissions.component.ts","./src/app/features/admin-page/components/permissions/user-permissions/user-permissions.component.html","./src/app/features/admin-page/components/permissions/user-permissions/user-permissions.config.ts","./src/app/features/admin-page/config/index.ts","./src/app/shared/components/table/table.config.ts","./src/app/shared/services/data/group-data.service.ts","./src/app/shared/services/permission-modal.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  AdminPageComponent,\n  ExperimentPermissionDetailsComponent,\n  GroupPermissionDetailsComponent,\n  ModelPermissionDetailsComponent,\n  PermissionsComponent,\n  UserPermissionDetailsComponent,\n} from './components';\nimport { AdminPageRoutesEnum } from './config';\n\nconst getBreadcrumb = (route: string) => {\n  const [entity, id] = route.split('/')\n  return `${entity.charAt(0).toUpperCase() + entity.slice(1)} / ${id}`;\n};\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminPageComponent,\n    children: [\n      {\n        path: AdminPageRoutesEnum.PERMISSIONS,\n        component: PermissionsComponent,\n        data: {\n          breadcrumb: {\n            skip: true,\n          }\n        },\n      },\n      {\n        path: `${AdminPageRoutesEnum.USER}/:id`,\n        component: UserPermissionDetailsComponent,\n        data: {\n          breadcrumb:  getBreadcrumb,\n        },\n      },\n      {\n        path: `${AdminPageRoutesEnum.EXPERIMENT}/:id`,\n        component: ExperimentPermissionDetailsComponent,\n        data: {\n          breadcrumb: getBreadcrumb,\n        },\n      },\n      {\n        path: `${AdminPageRoutesEnum.MODEL}/:id`,\n        component: ModelPermissionDetailsComponent,\n        data: {\n          breadcrumb: getBreadcrumb,\n        },\n      },\n      {\n        path: `${AdminPageRoutesEnum.GROUP}/:id`,\n        component: GroupPermissionDetailsComponent,\n        data: {\n          breadcrumb: getBreadcrumb,\n        },\n      },\n      {\n        path: '**',\n        redirectTo: AdminPageRoutesEnum.PERMISSIONS,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport {\n  AdminPageComponent,\n  ExperimentPermissionDetailsComponent,\n  ExperimentPermissionsComponent,\n  GroupPermissionDetailsComponent,\n  GroupPermissionsComponent,\n  ModelPermissionDetailsComponent,\n  ModelPermissionsComponent,\n  PermissionsComponent,\n  UserPermissionDetailsComponent,\n  UserPermissionsComponent,\n} from './components';\nimport { AdminPageRoutingModule } from './admin-page-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    AdminPageComponent,\n    UserPermissionsComponent,\n    ExperimentPermissionsComponent,\n    ModelPermissionsComponent,\n    UserPermissionDetailsComponent,\n    PermissionsComponent,\n    ExperimentPermissionDetailsComponent,\n    ModelPermissionDetailsComponent,\n    GroupPermissionDetailsComponent,\n    GroupPermissionsComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AdminPageRoutingModule,\n    FormsModule,\n    RouterModule,\n  ],\n})\nexport class AdminPageModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ml-admin-page',\n  template: '<router-outlet></router-outlet>',\n})\nexport class AdminPageComponent {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { GrantUserPermissionsComponent, GrantUserPermissionsModel } from 'src/app/shared/components';\nimport {\n  ExperimentsDataService,\n  PermissionDataService,\n  SnackBarService,\n  UserDataService,\n} from 'src/app/shared/services';\nimport { TableActionEvent, TableActionModel } from 'src/app/shared/components/table/table.interface';\nimport { filter, map, switchMap, tap } from 'rxjs';\nimport { TableActionEnum } from 'src/app/shared/components/table/table.config';\nimport { COLUMN_CONFIG, TABLE_ACTIONS } from './experiment-permission-details.config';\nimport { PermissionEnum } from 'src/app/core/configs/permissions';\nimport { PermissionModalService } from 'src/app/shared/services/permission-modal.service';\n\ninterface ExperimentModel {\n  permission: PermissionEnum;\n  username: string;\n}\n\n@Component({\n  selector: 'ml-experiment-permission-details',\n  templateUrl: './experiment-permission-details.component.html',\n  styleUrls: ['./experiment-permission-details.component.scss']\n})\nexport class ExperimentPermissionDetailsComponent implements OnInit {\n  experimentId!: string;\n  userColumnConfig = COLUMN_CONFIG;\n  actions: TableActionModel[] = TABLE_ACTIONS;\n  userDataSource: ExperimentModel[] = [];\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly experimentDataService: ExperimentsDataService,\n    private readonly permissionDataService: PermissionDataService,\n    private readonly userDataService: UserDataService,\n    private readonly route: ActivatedRoute,\n    private readonly permissionModalService: PermissionModalService,\n    private readonly snackBarService: SnackBarService,\n  ) { }\n\n  ngOnInit(): void {\n    this.experimentId = this.route.snapshot.paramMap.get('id') ?? '';\n\n    this.experimentDataService.getUsersForExperiment(this.experimentId)\n      .subscribe((users) => this.userDataSource = users);\n  }\n\n  handleUserEdit(event: ExperimentModel) {\n    this.permissionModalService.openEditPermissionsModal(this.experimentId, event.username, event.permission)\n      .pipe(\n        filter(Boolean),\n        switchMap((permission) => this.permissionDataService.updateExperimentPermission({\n          experiment_id: this.experimentId,\n          permission,\n          user_name: event.username,\n        })),\n        tap(() => this.snackBarService.openSnackBar('Permissions updated successfully')),\n        switchMap(() => this.experimentDataService.getUsersForExperiment(this.experimentId)),\n      )\n      .subscribe((users) => {\n        this.userDataSource = users;\n      });\n  }\n\n  handleActions($event: TableActionEvent<ExperimentModel>) {\n    const actionMapping: {\n      [key: string]: (event: ExperimentModel) => void\n    } = {\n      [TableActionEnum.EDIT]: this.handleUserEdit.bind(this),\n      [TableActionEnum.REVOKE]: this.revokePermissionForUser.bind(this),\n    }\n\n    const selectedAction = actionMapping[$event.action.action];\n    if (selectedAction) {\n      selectedAction($event.item);\n    }\n  }\n\n  revokePermissionForUser(item: ExperimentModel) {\n    this.permissionDataService.deleteExperimentPermission(\n      { experiment_id: this.experimentId, user_name: item.username })\n      .pipe(\n        tap(() => this.snackBarService.openSnackBar('Permission revoked successfully')),\n        switchMap(() => this.loadUsersForExperiment(this.experimentId)),\n      )\n      .subscribe((users) => this.userDataSource = users);\n  }\n\n  addUser() {\n    this.userDataService.getAllUsers()\n      .pipe(\n        map(({ users }) => users.filter((user) => !this.userDataSource.some((u) => u.username === user))),\n        switchMap((users) => this.dialog.open<GrantUserPermissionsComponent, GrantUserPermissionsModel>(GrantUserPermissionsComponent,\n          { data: { users } })\n          .afterClosed()),\n        filter(Boolean),\n        switchMap(({ user, permission }) => this.permissionDataService.createExperimentPermission({\n          experiment_id: this.experimentId,\n          permission: permission,\n          user_name: user,\n        })),\n        switchMap(() => this.loadUsersForExperiment(this.experimentId)),\n      )\n      .subscribe((users) => this.userDataSource = users);\n  }\n\n  loadUsersForExperiment(experimentId: string) {\n    return this.experimentDataService.getUsersForExperiment(experimentId);\n  }\n}\n","<div class=\"my-3\">\n  <div class=\"header-section\">\n    <h3>Experiment Access</h3>\n    <button mat-button (click)=\"addUser()\">\n      <mat-icon>add</mat-icon>\n      <span>Add</span>\n    </button>\n  </div>\n\n  <ml-table\n    [columnConfig]=\"userColumnConfig\"\n    [data]=\"userDataSource\"\n    [actions]=\"actions\"\n    (action)=\"handleActions($event)\"\n  ></ml-table>\n</div>\n","import { TABLE_ACTION_CONFIG } from 'src/app/shared/components/table/table.config';\n\nexport const TABLE_ACTIONS = [\n  TABLE_ACTION_CONFIG.EDIT,\n  TABLE_ACTION_CONFIG.REVOKE,\n];\n\nexport const COLUMN_CONFIG = [\n  {\n    title: 'User name',\n    key: 'username',\n  }, {\n    title: 'Permissions',\n    key: 'permission',\n  },\n];\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { filter, map, switchMap, tap } from 'rxjs';\n\nimport {\n  TableActionEvent,\n  TableActionModel,\n  TableColumnConfigModel,\n} from 'src/app/shared/components/table/table.interface';\nimport { GroupDataService } from 'src/app/shared/services/data/group-data.service';\nimport {\n  EXPERIMENT_ACTIONS,\n  EXPERIMENT_COLUMN_CONFIG,\n  MODELS_ACTIONS,\n  MODELS_COLUMN_CONFIG,\n} from './group-permission-details.config';\nimport { ExperimentModel, ModelModel } from 'src/app/shared/interfaces/groups-data.interface';\nimport {\n  ExperimentsDataService,\n  ModelsDataService,\n  PermissionDataService,\n  SnackBarService,\n} from 'src/app/shared/services';\nimport { PermissionModalService } from 'src/app/shared/services/permission-modal.service';\nimport { TableActionEnum } from 'src/app/shared/components/table/table.config';\nimport { EntityEnum } from 'src/app/core/configs/core';\n\n@Component({\n  selector: 'ml-group-permission-details',\n  templateUrl: './group-permission-details.component.html',\n  styleUrls: ['./group-permission-details.component.scss']\n})\nexport class GroupPermissionDetailsComponent implements OnInit {\n  groupName = '';\n\n  experimentColumnConfig: TableColumnConfigModel[] = EXPERIMENT_COLUMN_CONFIG;\n  experimentDataSource: ExperimentModel[] = [];\n  experimentActions: TableActionModel[] = EXPERIMENT_ACTIONS\n\n  modelColumnConfig: TableColumnConfigModel[] = MODELS_COLUMN_CONFIG;\n  modelDataSource: ModelModel[] = [];\n  modelActions: TableActionModel[] = MODELS_ACTIONS;\n\n  constructor(\n    private readonly groupDataService: GroupDataService,\n    private readonly route: ActivatedRoute,\n    private readonly permissionDataService: PermissionDataService,\n    private readonly permissionModalService: PermissionModalService,\n    private readonly experimentsDataService: ExperimentsDataService,\n    private readonly snackBarService: SnackBarService,\n    private readonly modelDataService: ModelsDataService,\n  ) { }\n\n  ngOnInit(): void {\n    this.groupName = this.route.snapshot.paramMap.get('id') ?? '';\n\n    this.groupDataService.getAllExperimentsForGroup(this.groupName)\n      .subscribe((experiments) => this.experimentDataSource = experiments);\n    this.groupDataService.getAllRegisteredModelsForGroup(this.groupName)\n      .subscribe((models) => this.modelDataSource = models);\n  }\n\n  openModalAddExperimentPermissionToGroup() {\n    this.experimentsDataService.getAllExperiments()\n      .pipe(\n        map((experiments) => experiments\n          .filter((experiment) => !this.experimentDataSource.some((exp) => exp.name === experiment.name))\n        ),\n        switchMap((experiments) => this.permissionModalService.openGrantPermissionModal(EntityEnum.EXPERIMENT, experiments, this.groupName)),\n        filter(Boolean),\n        switchMap((newPermission) => this.permissionDataService.addExperimentPermissionToGroup(this.groupName, newPermission.entity.id, newPermission.permission)),\n        tap(() => this.snackBarService.openSnackBar('Permission granted successfully')),\n        switchMap(() => this.groupDataService.getAllExperimentsForGroup(this.groupName)),\n      )\n      .subscribe((experiments) => this.experimentDataSource = experiments);\n  }\n\n  openModalAddModelPermissionToGroup() {\n    this.modelDataService.getAllModels()\n      .pipe(\n        map((models) => models\n          .filter((model) => !this.modelDataSource.some((m) => m.name === model.name))\n          .map((model, index) => ({ ...model, id: `${index}-${model.name}` }))),\n        switchMap((models) => this.permissionModalService.openGrantPermissionModal(EntityEnum.MODEL, models, this.groupName)),\n        filter(Boolean),\n        switchMap((newPermission) => this.permissionDataService.addModelPermissionToGroup(newPermission.entity.name, this.groupName, newPermission.permission)),\n        tap(() => this.snackBarService.openSnackBar('Permission granted successfully')),\n        switchMap(() => this.groupDataService.getAllRegisteredModelsForGroup(this.groupName)),\n      )\n      .subscribe((models) => this.modelDataSource = models);\n  }\n\n  handleExperimentActions(event: TableActionEvent<ExperimentModel>) {\n    const actionMapping: { [key: string]: (experiment: ExperimentModel) => void } = {\n      [TableActionEnum.EDIT]: this.handleEditExperimentPermissionForGroup.bind(this),\n      [TableActionEnum.REVOKE]: this.revokeExperimentPermissionForGroup.bind(this),\n    }\n\n    const selectedAction = actionMapping[event.action.action];\n    if (selectedAction) {\n      selectedAction(event.item);\n    }\n  }\n\n  handleEditExperimentPermissionForGroup(experiment: ExperimentModel) {\n    this.permissionModalService.openEditPermissionsModal(experiment.name, this.groupName, experiment.permission)\n      .pipe(\n        filter(Boolean),\n        switchMap((permission) => this.permissionDataService.updateExperimentPermissionForGroup(this.groupName, experiment.id, permission)),\n        tap(() => this.snackBarService.openSnackBar('Permission updated successfully')),\n        switchMap(() => this.groupDataService.getAllExperimentsForGroup(this.groupName)),\n      )\n      .subscribe((experiments) => this.experimentDataSource = experiments);\n  }\n\n  revokeExperimentPermissionForGroup(experiment: ExperimentModel) {\n    this.permissionDataService.removeExperimentPermissionFromGroup(this.groupName, experiment.id)\n      .pipe(\n        tap(() => this.snackBarService.openSnackBar('Permission revoked successfully')),\n        switchMap(() => this.groupDataService.getAllExperimentsForGroup(this.groupName)),\n      )\n      .subscribe((experiments) => this.experimentDataSource = experiments);\n  }\n\n  handleModelActions(event: TableActionEvent<ModelModel>) {\n    const actionMapping: { [key: string]: (model: ModelModel) => void } = {\n      [TableActionEnum.EDIT]: this.handleEditModelPermissionForGroup.bind(this),\n      [TableActionEnum.REVOKE]: this.revokeModelPermissionForGroup.bind(this),\n    }\n\n    const selectedAction = actionMapping[event.action.action];\n    if (selectedAction) {\n      selectedAction(event.item);\n    }\n  }\n\n  handleEditModelPermissionForGroup(model: ModelModel) {\n    this.permissionModalService.openEditPermissionsModal(model.name, this.groupName, model.permission)\n      .pipe(\n        filter(Boolean),\n        switchMap((permission) => this.permissionDataService.updateModelPermissionForGroup(model.name, this.groupName, permission)),\n        tap(() => this.snackBarService.openSnackBar('Permission updated successfully')),\n        switchMap(() => this.groupDataService.getAllRegisteredModelsForGroup(this.groupName)),\n      )\n      .subscribe((models) => this.modelDataSource = models);\n\n  }\n\n  revokeModelPermissionForGroup(model: ModelModel) {\n    this.permissionDataService.removeModelPermissionFromGroup(model.name, this.groupName)\n      .pipe(\n        tap(() => this.snackBarService.openSnackBar('Permission revoked successfully')),\n        switchMap(() => this.groupDataService.getAllRegisteredModelsForGroup(this.groupName)),\n      )\n      .subscribe((models) => this.modelDataSource = models);\n  }\n}\n","<mat-tab-group>\n    <!--  Experiments-->\n    <mat-tab label=\"Experiments\">\n        <div class=\"my-3\">\n            <div class=\"header-section\">\n                <button mat-button (click)=\"openModalAddExperimentPermissionToGroup()\">\n                    <mat-icon>add</mat-icon>\n                    <span>Add</span>\n                </button>\n            </div>\n        </div>\n\n        <ml-table\n                [columnConfig]=\"experimentColumnConfig\"\n                [data]=\"experimentDataSource\"\n                [actions]=\"experimentActions\"\n                (action)=\"handleExperimentActions($event)\"\n        ></ml-table>\n\n    </mat-tab>\n\n    <!--  Models-->\n    <mat-tab label=\"Models\">\n        <div class=\"my-3\">\n            <div class=\"my-3\">\n                <div class=\"header-section\">\n                    <button mat-button (click)=\"openModalAddModelPermissionToGroup()\">\n                        <mat-icon>add</mat-icon>\n                        <span>Add</span>\n                    </button>\n                </div>\n            </div>\n\n\n            <ml-table\n                    [columnConfig]=\"modelColumnConfig\"\n                    [data]=\"modelDataSource\"\n                    [actions]=\"modelActions\"\n                    (action)=\"handleModelActions($event)\"\n            ></ml-table>\n        </div>\n    </mat-tab>\n\n</mat-tab-group>\n","import { TABLE_ACTION_CONFIG } from 'src/app/shared/components/table/table.config';\n\nexport const EXPERIMENT_COLUMN_CONFIG = [\n  { title: 'Experiment name', key: 'name' },\n  { title: 'Permission', key: 'permission' },\n];\n\n\nexport const EXPERIMENT_ACTIONS = [\n  TABLE_ACTION_CONFIG.EDIT,\n  TABLE_ACTION_CONFIG.REVOKE,\n];\n\n\nexport const MODELS_COLUMN_CONFIG = [\n  { title: 'Model name', key: 'name' },\n  { title: 'Permission', key: 'permission' },\n];\n\n\nexport const MODELS_ACTIONS = [\n  TABLE_ACTION_CONFIG.EDIT,\n  TABLE_ACTION_CONFIG.REVOKE,\n];\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { filter, map, switchMap, tap } from 'rxjs';\n\nimport { TableActionEvent, TableActionModel } from 'src/app/shared/components/table/table.interface';\nimport { ModelsDataService, PermissionDataService, SnackBarService, UserDataService } from 'src/app/shared/services';\nimport { COLUMN_CONFIG, TABLE_ACTIONS } from './model-permission-details.config';\nimport { TableActionEnum } from 'src/app/shared/components/table/table.config';\nimport { PermissionModalService } from 'src/app/shared/services/permission-modal.service';\nimport { EntityEnum } from 'src/app/core/configs/core';\nimport { ModelUserListModel } from 'src/app/shared/interfaces/models-data.interface';\n\n@Component({\n  selector: 'ml-model-permission-details',\n  templateUrl: './model-permission-details.component.html',\n  styleUrls: ['./model-permission-details.component.scss'],\n})\nexport class ModelPermissionDetailsComponent implements OnInit {\n  modelId!: string;\n  userDataSource: ModelUserListModel[] = [];\n\n  userColumnConfig = COLUMN_CONFIG;\n  actions: TableActionModel[] = TABLE_ACTIONS;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly modelDataService: ModelsDataService,\n    private readonly permissionDataService: PermissionDataService,\n    private readonly userDataService: UserDataService,\n    private readonly snackService: SnackBarService,\n    private readonly permissionModalService: PermissionModalService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.modelId = this.route.snapshot.paramMap.get('id') ?? '';\n\n    this.loadUsersForModel(this.modelId)\n      .subscribe((users) => this.userDataSource = users);\n  }\n\n  revokePermissionForUser(item: ModelUserListModel) {\n    this.permissionDataService.deleteModelPermission({ name: this.modelId, user_name: item.username })\n      .pipe(\n        tap(() => this.snackService.openSnackBar('Permission revoked successfully')),\n        switchMap(() => this.loadUsersForModel(this.modelId)),\n      )\n      .subscribe((users) => this.userDataSource = users);\n  }\n\n  editPermissionForUser({ username, permission }: ModelUserListModel) {\n    this.permissionModalService.openEditPermissionsModal(this.modelId, username, permission)\n      .pipe(\n        filter(Boolean),\n        switchMap((permission) => this.permissionDataService.updateModelPermission({\n          name: this.modelId,\n          permission,\n          user_name: username,\n        })),\n        tap(() => this.snackService.openSnackBar('Permission updated')),\n        switchMap(() => this.loadUsersForModel(this.modelId)),\n      )\n      .subscribe((users) => {\n        this.userDataSource = users;\n      });\n  }\n\n  handleActions({ action, item }: TableActionEvent<ModelUserListModel>) {\n    const actionMapping: { [key: string]: (item: ModelUserListModel) => void } = {\n      [TableActionEnum.REVOKE]: this.revokePermissionForUser.bind(this),\n      [TableActionEnum.EDIT]: this.editPermissionForUser.bind(this),\n    };\n\n    const selectedAction = actionMapping[action.action];\n    if (selectedAction) {\n      selectedAction(item);\n    }\n  }\n\n  loadUsersForModel(modelId: string) {\n    return this.modelDataService.getUsersForModel(modelId);\n  }\n\n  addUser() {\n    this.userDataService.getAllUsers()\n      .pipe(\n        map(({ users }) => users.filter((user) => !this.userDataSource.some((u) => u.username === user))),\n        switchMap((users) => this.permissionModalService.openGrantPermissionModal(\n          EntityEnum.MODEL,\n          users.map((user, index) => ({ id: index + user, name: user })),\n          this.modelId),\n        ),\n        filter(Boolean),\n        switchMap(({ entity, permission }) => this.permissionDataService.createModelPermission({\n          name: this.modelId,\n          permission: permission,\n          user_name: entity.name,\n        })),\n        switchMap(() => this.loadUsersForModel(this.modelId)),\n      )\n      .subscribe((users) => {\n        this.userDataSource = users;\n      });\n  }\n}\n","<div class=\"my-3\">\n  <div class=\"header-section\">\n    <h3>Model Access</h3>\n    <button mat-button (click)=\"addUser()\">\n      <mat-icon>add</mat-icon>\n      <span>Add</span>\n    </button>\n  </div>\n\n  <ml-table\n    *ngIf=\"userDataSource.length\"\n    [columnConfig]=\"userColumnConfig\"\n    [data]=\"userDataSource\"\n    [actions]=\"actions\"\n    (action)=\"handleActions($event)\"\n  ></ml-table>\n</div>\n","import { TABLE_ACTION_CONFIG } from 'src/app/shared/components/table/table.config';\n\nexport const TABLE_ACTIONS = [\n  TABLE_ACTION_CONFIG.EDIT,\n  TABLE_ACTION_CONFIG.REVOKE,\n];\n\nexport const COLUMN_CONFIG = [\n  {\n    title: 'User name',\n    key: 'username',\n  },\n  {\n    title: 'Permissions',\n    key: 'permission',\n  },\n];\n","import { Component, OnInit } from '@angular/core';\nimport { filter, forkJoin, map, switchMap, tap } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  ExperimentsDataService,\n  ModelsDataService,\n  PermissionDataService,\n  SnackBarService,\n} from 'src/app/shared/services';\nimport {\n  EXPERIMENT_ACTIONS,\n  EXPERIMENT_COLUMN_CONFIG,\n  MODEL_ACTIONS,\n  MODEL_COLUMN_CONFIG,\n} from './user-permission-details.config';\nimport { EntityEnum } from 'src/app/core/configs/core';\nimport { TableActionEvent, TableActionModel } from 'src/app/shared/components/table/table.interface';\nimport { PermissionModalService } from 'src/app/shared/services/permission-modal.service';\nimport { TableActionEnum } from 'src/app/shared/components/table/table.config';\nimport { ModelPermissionModel } from 'src/app/shared/interfaces/models-data.interface';\nimport { ExperimentForUserModel } from 'src/app/shared/interfaces/experiments-data.interface';\n\n@Component({\n  selector: 'ml-user-permission-details',\n  templateUrl: './user-permission-details.component.html',\n  styleUrls: ['./user-permission-details.component.scss'],\n})\nexport class UserPermissionDetailsComponent implements OnInit {\n  userId: string = '';\n  experimentsColumnConfig = EXPERIMENT_COLUMN_CONFIG;\n  modelsColumnConfig = MODEL_COLUMN_CONFIG;\n\n  experimentsDataSource: ExperimentForUserModel[] = [];\n  modelsDataSource: ModelPermissionModel[] = [];\n  experimentsActions: TableActionModel[] = EXPERIMENT_ACTIONS;\n  modelsActions: TableActionModel[] = MODEL_ACTIONS;\n\n  constructor(\n    private readonly expDataService: ExperimentsDataService,\n    private readonly modelDataService: ModelsDataService,\n    private readonly permissionDataService: PermissionDataService,\n    private readonly route: ActivatedRoute,\n    private readonly permissionModalService: PermissionModalService,\n    private readonly snackBarService: SnackBarService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.userId = this.route.snapshot.paramMap.get('id') ?? '';\n\n    forkJoin([\n      this.expDataService.getExperimentsForUser(this.userId),\n      this.modelDataService.getModelsForUser(this.userId),\n    ])\n      .subscribe(([experiments, models]) => {\n        this.experimentsDataSource = experiments;\n        this.modelsDataSource = models;\n      });\n\n  }\n\n  addModelPermissionToUser() {\n    return this.modelDataService.getAllModels()\n      .pipe(\n        map((models) => models.map((model, index) => ({ ...model, id: `${index}-${model.name}` }))),\n        map((models) => models.filter((model) => !this.modelsDataSource.some((m) => m.name === model.name))),\n        switchMap((models) => this.permissionModalService.openGrantPermissionModal(EntityEnum.MODEL, models, this.userId)),\n        filter(Boolean),\n        switchMap(({ entity, permission }) => this.permissionDataService.createModelPermission({\n          user_name: this.userId,\n          name: entity.name,\n          permission: permission,\n        })),\n        tap(() => this.snackBarService.openSnackBar('Permission granted successfully')),\n        switchMap(() => this.modelDataService.getModelsForUser(this.userId)),\n      )\n      .subscribe((models) => this.modelsDataSource = models);\n  }\n\n  addExperimentPermissionToUser() {\n    this.expDataService.getAllExperiments()\n      .pipe(\n        map((experiments) => experiments.filter((experiment) => !this.experimentsDataSource.some((exp) => exp.id === experiment.id))),\n        switchMap((experiments) => this.permissionModalService.openGrantPermissionModal(EntityEnum.EXPERIMENT, experiments, this.userId)),\n        filter(Boolean),\n        switchMap(({ entity, permission }) => {\n          return this.permissionDataService.createExperimentPermission({\n            user_name: this.userId,\n            experiment_name: entity.name,\n            permission,\n          })\n        }),\n        tap(() => this.snackBarService.openSnackBar('Permission granted successfully')),\n        switchMap(() => this.expDataService.getExperimentsForUser(this.userId)),\n      )\n      .subscribe((experiments) => this.experimentsDataSource = experiments);\n  }\n\n  handleExperimentActions(event: TableActionEvent<ExperimentForUserModel>) {\n    const actionMapping: { [key: string]: (experiment: ExperimentForUserModel) => void } = {\n      [TableActionEnum.EDIT]: this.handleEditUserPermissionForExperiment.bind(this),\n      [TableActionEnum.REVOKE]: this.revokeExperimentPermissionForUser.bind(this),\n    }\n\n    const selectedAction = actionMapping[event.action.action];\n    if (selectedAction) {\n      selectedAction(event.item);\n    }\n  }\n\n  revokeExperimentPermissionForUser(item: {id: string}) {\n    this.permissionDataService.deleteExperimentPermission({experiment_id: item.id, user_name: this.userId})\n      .pipe(\n        tap(() => this.snackBarService.openSnackBar('Permission revoked successfully')),\n        switchMap(() => this.expDataService.getExperimentsForUser(this.userId)),\n      )\n      .subscribe((experiments) => this.experimentsDataSource = experiments);\n\n  }\n\n  revokeModelPermissionForUser({name}: ModelPermissionModel) {\n    this.permissionDataService.deleteModelPermission({name: name, user_name: this.userId})\n      .pipe(\n        tap(() => this.snackBarService.openSnackBar('Permission revoked successfully')),\n        switchMap(() => this.modelDataService.getModelsForUser(this.userId)),\n      )\n      .subscribe((models) => this.modelsDataSource = models);\n  }\n\n  handleModelActions({ action, item }: TableActionEvent<ModelPermissionModel>) {\n    const actionMapping: { [key: string]: (model: ModelPermissionModel) => void } = {\n      [TableActionEnum.EDIT]: this.handleEditUserPermissionForModel.bind(this),\n      [TableActionEnum.REVOKE]: this.revokeModelPermissionForUser.bind(this),\n    }\n\n    const selectedAction = actionMapping[action.action];\n    if (selectedAction) {\n      selectedAction(item);\n    }\n  }\n\n  handleEditUserPermissionForModel({ name, permission }: ModelPermissionModel) {\n    this.permissionModalService.openEditPermissionsModal(name, this.userId, permission)\n      .pipe(\n        filter(Boolean),\n        switchMap((permission) => this.permissionDataService.updateModelPermission({\n          name,\n          permission,\n          user_name: this.userId,\n        })),\n        tap(() => this.snackBarService.openSnackBar('Permissions updated successfully')),\n        switchMap(() => this.modelDataService.getModelsForUser(this.userId)),\n      )\n      .subscribe((models) => this.modelsDataSource = models);\n  }\n\n  handleEditUserPermissionForExperiment({ id, permissions }: ExperimentForUserModel) {\n    this.permissionModalService.openEditPermissionsModal(id, this.userId, permissions)\n      .pipe(\n        filter(Boolean),\n        switchMap((permission) => this.permissionDataService.updateExperimentPermission({\n          experiment_id: id,\n          permission,\n          user_name: this.userId,\n        })),\n        tap(() => this.snackBarService.openSnackBar('Permissions updated successfully')),\n        switchMap(() => this.expDataService.getExperimentsForUser(this.userId)),\n      )\n      .subscribe((experiments) => this.experimentsDataSource = experiments);\n  }\n}\n","<mat-tab-group>\n  <!--  Experiments-->\n  <mat-tab label=\"Experiments\">\n    <div class=\"my-3\">\n      <div class=\"header-section\">\n        <button mat-button (click)=\"addExperimentPermissionToUser()\">\n          <mat-icon>add</mat-icon>\n          <span>Add</span>\n        </button>\n      </div>\n\n      <ml-table\n              [columnConfig]=\"experimentsColumnConfig\"\n              [data]=\"experimentsDataSource\"\n              *ngIf=\"experimentsDataSource.length\"\n              [actions]=\"experimentsActions\"\n              (action)=\"handleExperimentActions($event)\"\n      ></ml-table>\n    </div>\n  </mat-tab>\n\n  <!--  Models-->\n  <mat-tab label=\"Models\">\n    <div class=\"my-3\">\n      <div class=\"header-section\">\n        <button mat-button (click)=\"addModelPermissionToUser()\">\n          <mat-icon>add</mat-icon>\n          <span>Add</span>\n        </button>\n      </div>\n\n      <ml-table\n              [columnConfig]=\"modelsColumnConfig\"\n              [data]=\"modelsDataSource\"\n              *ngIf=\"modelsDataSource.length\"\n              [actions]=\"modelsActions\"\n              (action)=\"handleModelActions($event)\"\n      ></ml-table>\n    </div>\n  </mat-tab>\n\n</mat-tab-group>\n","import { TABLE_ACTION_CONFIG } from 'src/app/shared/components/table/table.config';\n\nexport const MODEL_COLUMN_CONFIG = [\n  { title: 'Model name', key: 'name' },\n  { title: 'Permissions', key: 'permission' },\n];\n\nexport const EXPERIMENT_COLUMN_CONFIG = [\n  { title: 'Experiment Name', key: 'name' },\n  { title: 'Permission', key: 'permission' },\n];\n\nexport const EXPERIMENT_ACTIONS = [\n  TABLE_ACTION_CONFIG.EDIT,\n  TABLE_ACTION_CONFIG.REVOKE,\n];\n\nexport const MODEL_ACTIONS = [\n  TABLE_ACTION_CONFIG.EDIT,\n  TABLE_ACTION_CONFIG.REVOKE,\n];\n","export * from './details/experiment-permission-details/experiment-permission-details.component'\nexport * from './details/model-permission-details/model-permission-details.component';\nexport * from './details/user-permission-details/user-permission-details.component';\nexport * from './details/group-permission-details/group-permission-details.component';\n\nexport * from './admin-page/admin-page.component';\n\nexport * from './permissions/permissions.component';\nexport * from './permissions/experiment-permissions/experiment-permissions.component';\nexport * from './permissions/model-permissions/model-permissions.component';\nexport * from './permissions/user-permissions/user-permissions.component';\nexport * from './permissions/group-permissions/group-permissions.component';\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ExperimentsDataService } from 'src/app/shared/services';\nimport { TableActionEvent, TableActionModel } from 'src/app/shared/components/table/table.interface';\nimport { TableActionEnum } from 'src/app/shared/components/table/table.config';\nimport { COLUMN_CONFIG, TABLE_ACTIONS } from './experiment-permissions.config';\nimport { ExperimentModel } from 'src/app/shared/interfaces/experiments-data.interface';\nimport { AdminPageRoutesEnum } from '../../../config';\nimport { finalize } from 'rxjs';\n\n\n@Component({\n  selector: 'ml-experiment-permissions',\n  templateUrl: './experiment-permissions.component.html',\n  styleUrls: ['./experiment-permissions.component.scss']\n})\nexport class ExperimentPermissionsComponent implements OnInit {\n  columnConfig = COLUMN_CONFIG;\n  dataSource: ExperimentModel[] = [];\n  actions: TableActionModel[] = TABLE_ACTIONS;\n\n  isLoading = false;\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly experimentDataService: ExperimentsDataService,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.experimentDataService.getAllExperiments()\n      .pipe(\n        finalize(() => this.isLoading = false),\n      )\n      .subscribe((experiments) => this.dataSource = experiments);\n  }\n\n  handleActions(event: TableActionEvent<ExperimentModel>) {\n    const actionMapping: { [key: string]: (experiment: ExperimentModel) => void } = {\n      [TableActionEnum.EDIT]: this.handleExperimentEdit.bind(this),\n    }\n\n    const selectedAction = actionMapping[event.action.action];\n    if (selectedAction) {\n      selectedAction(event.item);\n    }\n  }\n\n  handleExperimentEdit({ id }: ExperimentModel) {\n    this.router.navigate([`../${AdminPageRoutesEnum.EXPERIMENT}/` + id], { relativeTo: this.route })\n  }\n}\n","<ml-table\n        *ngIf=\"!isLoading; else loader\"\n        [columnConfig]=\"columnConfig\"\n        [data]=\"dataSource\"\n        [actions]=\"actions\"\n        (action)=\"handleActions($event)\"\n></ml-table>\n\n<ng-template #loader>\n    <div class=\"loader d-flex justify-content-center align-items-center my-5\">\n        <mat-spinner [diameter]=\"40\"></mat-spinner>\n    </div>\n</ng-template>\n","import { TableActionEnum } from 'src/app/shared/components/table/table.config';\n\nexport const TABLE_ACTIONS = [\n  { action: TableActionEnum.EDIT, icon: 'edit', name: 'Edit' },\n];\n\nexport const COLUMN_CONFIG = [{\n  title: 'Experiment Name',\n  key: 'name'\n}];\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { TableActionEvent, TableActionModel } from 'src/app/shared/components/table/table.interface';\nimport { TableActionEnum } from 'src/app/shared/components/table/table.config';\nimport { GROUP_ACTIONS, GROUP_COLUMN_CONFIG } from './group-permissions.config';\nimport { GroupDataService } from 'src/app/shared/services/data/group-data.service';\nimport { AdminPageRoutesEnum } from '../../../config';\nimport { finalize } from 'rxjs';\n\n\ninterface GroupModel {\n  group: string;\n}\n\n@Component({\n  selector: 'ml-group-permissions',\n  templateUrl: './group-permissions.component.html',\n  styleUrls: ['./group-permissions.component.scss']\n})\nexport class GroupPermissionsComponent implements OnInit {\n\n  columnConfig = GROUP_COLUMN_CONFIG;\n  dataSource: GroupModel[] = [];\n  actions: TableActionModel[] = GROUP_ACTIONS;\n\n  isLoading = false;\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly groupDataService: GroupDataService,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.groupDataService.getAllGroups()\n      .pipe(\n        finalize(() => this.isLoading = false),\n      )\n      .subscribe(({ groups }) => this.dataSource = groups.map((group) => ({ group })));\n  }\n\n  handleItemAction({ action, item }: TableActionEvent<GroupModel>) {\n    const actionHandlers: { [key: string]: (group: GroupModel) => void } = {\n      [TableActionEnum.EDIT]: this.handleUserEdit.bind(this),\n    }\n\n    const selectedAction = actionHandlers[action.action];\n    if (selectedAction) {\n      selectedAction(item);\n    }\n  }\n\n  handleUserEdit({ group }: GroupModel): void {\n    this.router.navigate([`../${AdminPageRoutesEnum.GROUP}/` + group], { relativeTo: this.route })\n  }\n}\n","<ml-table\n        *ngIf=\"!isLoading; else loader\"\n        [columnConfig]=\"columnConfig\"\n        [data]=\"dataSource\"\n        [actions]=\"actions\"\n        (action)=\"handleItemAction($event)\"\n></ml-table>\n\n<ng-template #loader>\n    <div class=\"loader d-flex justify-content-center align-items-center my-5\">\n        <mat-spinner [diameter]=\"40\"></mat-spinner>\n    </div>\n</ng-template>\n","import { TABLE_ACTION_CONFIG } from 'src/app/shared/components/table/table.config';\nimport { TableActionModel } from 'src/app/shared/components/table/table.interface';\n\nexport const GROUP_COLUMN_CONFIG = [\n  {\n    title: 'Group name',\n    key: 'group',\n  },\n];\n\nexport const GROUP_ACTIONS: TableActionModel[] = [\n  TABLE_ACTION_CONFIG.EDIT\n];\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ModelsDataService } from 'src/app/shared/services';\nimport { TableActionEvent, TableActionModel } from 'src/app/shared/components/table/table.interface';\nimport { MODEL_COLUMN_CONFIG, MODEL_TABLE_ACTIONS } from './model-permissions.config';\nimport { TableActionEnum } from 'src/app/shared/components/table/table.config';\nimport { ModelModel } from 'src/app/shared/interfaces/models-data.interface';\nimport { AdminPageRoutesEnum } from '../../../config';\nimport { finalize } from 'rxjs';\n\n@Component({\n  selector: 'ml-model-permissions',\n  templateUrl: './model-permissions.component.html',\n  styleUrls: ['./model-permissions.component.scss'],\n})\nexport class ModelPermissionsComponent implements OnInit {\n  columnConfig = MODEL_COLUMN_CONFIG;\n  dataSource: ModelModel[] = [];\n  actions: TableActionModel[] = MODEL_TABLE_ACTIONS;\n\n  isLoading = false;\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n    private readonly modelDataService: ModelsDataService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.modelDataService.getAllModels()\n      .pipe(\n        finalize(() => this.isLoading = false),\n      )\n      .subscribe((models) => {\n        this.dataSource = models;\n      })\n  }\n\n  handleModelEdit({ name }: ModelModel) {\n    this.router.navigate([`../${AdminPageRoutesEnum.MODEL}/` + name], { relativeTo: this.route })\n  }\n\n  handleAction({ action, item }: TableActionEvent<ModelModel>) {\n    const actionMapping: { [key: string]: (item: ModelModel) => void } = {\n      [TableActionEnum.EDIT]: this.handleModelEdit.bind(this),\n    };\n\n    const selectedAction = actionMapping[action.action];\n    if (selectedAction) {\n      selectedAction(item);\n    }\n  }\n}\n","<ml-table\n    *ngIf=\"!isLoading; else loader\"\n      [columnConfig]=\"columnConfig\"\n      [data]=\"dataSource\"\n      [actions]=\"actions\"\n      (action)=\"handleAction($event)\"\n></ml-table>\n\n<ng-template #loader>\n    <div class=\"loader d-flex justify-content-center align-items-center my-5\">\n        <mat-spinner [diameter]=\"40\"></mat-spinner>\n    </div>\n</ng-template>\n","import { TABLE_ACTION_CONFIG } from 'src/app/shared/components/table/table.config';\n\nexport const MODEL_COLUMN_CONFIG = [\n  {\n    title: 'Model Name',\n    key: 'name',\n  },\n];\nexport const MODEL_TABLE_ACTIONS = [\n  TABLE_ACTION_CONFIG.EDIT,\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ml-permissions',\n  templateUrl: './permissions.component.html',\n  styleUrls: ['./permissions.component.scss']\n})\nexport class PermissionsComponent {}\n","<mat-tab-group>\n\n  <mat-tab label=\"Users permissions\">\n    <div class=\"my-3\">\n      <ml-user-permissions></ml-user-permissions>\n    </div>\n  </mat-tab>\n\n  <mat-tab label=\"Experiment permissions\">\n    <div class=\"my-3\">\n      <ml-experiment-permissions></ml-experiment-permissions>\n    </div>\n  </mat-tab>\n\n  <mat-tab label=\"Model permissions\">\n    <div class=\"my-3\">\n      <ml-model-permissions></ml-model-permissions>\n    </div>\n  </mat-tab>\n\n  <mat-tab label=\"Group permissions\">\n    <div class=\"my-3\">\n      <ml-group-permissions></ml-group-permissions>\n    </div>\n  </mat-tab>\n\n</mat-tab-group>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { finalize } from 'rxjs';\n\nimport { UserDataService } from 'src/app/shared/services';\nimport { TableActionEvent, TableActionModel } from 'src/app/shared/components/table/table.interface';\nimport { TableActionEnum } from 'src/app/shared/components/table/table.config';\nimport { USER_ACTIONS, USER_COLUMN_CONFIG } from './user-permissions.config';\nimport { AdminPageRoutesEnum } from '../../../config';\n\ninterface UserModel {\n  user: string,\n}\n\n@Component({\n  selector: 'ml-user-permissions',\n  templateUrl: './user-permissions.component.html',\n  styleUrls: ['./user-permissions.component.scss'],\n})\nexport class UserPermissionsComponent implements OnInit {\n  columnConfig = USER_COLUMN_CONFIG;\n  actions: TableActionModel[] = USER_ACTIONS;\n  dataSource: UserModel[] = [];\n\n  isLoading = false;\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute,\n    private readonly userDataService: UserDataService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.isLoading = true;\n    this.userDataService.getAllUsers()\n      .pipe(\n        finalize(() => this.isLoading = false),\n      )\n      .subscribe(({ users }) => this.dataSource = users.map((user) => ({ user })))\n  }\n\n  handleItemAction({ action, item }: TableActionEvent<UserModel>) {\n    const actionHandlers: { [key: string]: (user: UserModel) => void } = {\n      [TableActionEnum.EDIT]: this.handleUserEdit.bind(this),\n    }\n\n    const selectedAction = actionHandlers[action.action];\n    if (selectedAction) {\n      selectedAction(item);\n    }\n  }\n\n  handleUserEdit({ user }: UserModel): void {\n    this.router.navigate([`../${AdminPageRoutesEnum.USER}/` + user], { relativeTo: this.route })\n  }\n}\n","<ml-table\n        *ngIf=\"!isLoading; else loader\"\n        [columnConfig]=\"columnConfig\"\n        [data]=\"dataSource\"\n        [actions]=\"actions\"\n        (action)=\"handleItemAction($event)\"\n></ml-table>\n\n<ng-template #loader>\n    <div class=\"loader d-flex justify-content-center align-items-center my-5\">\n        <mat-spinner [diameter]=\"40\"></mat-spinner>\n    </div>\n</ng-template>\n","import { TABLE_ACTION_CONFIG } from 'src/app/shared/components/table/table.config';\nimport { TableActionModel } from 'src/app/shared/components/table/table.interface';\n\nexport const USER_COLUMN_CONFIG = [\n  {\n    title: 'User name',\n    key: 'user',\n  },\n];\n\nexport const USER_ACTIONS: TableActionModel[] = [\n  TABLE_ACTION_CONFIG.EDIT\n];\n","export enum AdminPageRoutesEnum {\n  PERMISSIONS = 'permissions',\n  USER = 'user',\n  EXPERIMENT = 'experiment',\n  MODEL = 'model',\n  GROUP = 'group',\n}\n","import { TableActionModel } from './table.interface';\n\nexport enum TableActionEnum {\n  EDIT = 'EDIT',\n  DELETE = 'DELETE',\n  REVOKE = 'REVOKE',\n  ADD = 'ADD',\n  MANAGE = 'MANAGE',\n}\n\nconst ADD_ACTION: TableActionModel = {\n  name: 'Add',\n  icon: 'add',\n  action: TableActionEnum.ADD\n};\n\nconst EDIT_ACTION = {\n  name: 'Edit',\n  icon: 'edit',\n  action: TableActionEnum.EDIT\n};\n\nconst DELETE_ACTION = {\n  name: 'Delete',\n  icon: 'delete',\n  action: TableActionEnum.DELETE\n};\n\nconst REVOKE_ACTION = {\n  name: 'Revoke',\n  icon: 'key_off',\n  action: TableActionEnum.REVOKE\n};\n\nexport const TABLE_ACTION_CONFIG = {\n  ADD: ADD_ACTION,\n  EDIT: EDIT_ACTION,\n  DELETE: DELETE_ACTION,\n  REVOKE: REVOKE_ACTION\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { API_URL } from 'src/app/core/configs/api-urls';\nimport { ExperimentModel, GroupsDataModel, ModelModel } from 'src/app/shared/interfaces/groups-data.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupDataService {\n\n  constructor(\n    private readonly http: HttpClient,\n  ) { }\n\n  getAllGroups() {\n    return this.http.get<GroupsDataModel>(API_URL.ALL_GROUPS);\n  }\n\n  getAllExperimentsForGroup(groupName: string) {\n    return this.http.get<ExperimentModel[]>(API_URL.EXPERIMENTS_FOR_GROUP.replace('${groupName}', groupName))\n  }\n\n  getAllRegisteredModelsForGroup(groupName: string) {\n    return this.http.get<ModelModel[]>(API_URL.MODELS_FOR_GROUP.replace('${groupName}', groupName));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { EntityEnum } from 'src/app/core/configs/core';\nimport { PermissionEnum } from 'src/app/core/configs/permissions';\nimport { EditPermissionsModalComponent, GrantPermissionModalComponent } from '../components';\nimport {\n  PermissionDialogResultModel,\n  PermissionsDialogData,\n} from '../components/modals/edit-permissions-modal/edit-permissions-modal.interface';\nimport {\n  GrantPermissionModalData,\n  GrantPermissionModalResult,\n  WithNameAndId,\n} from '../components/modals/grant-permissoin-modal/grant-permission-modal.inteface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionModalService {\n\n  constructor(\n    private readonly dialog: MatDialog,\n  ) {\n  }\n\n  openEditPermissionsModal(entity: string, targetEntity: string, currentPermission: PermissionEnum) {\n    const dialogData: PermissionsDialogData = {\n      targetEntity,\n      entity,\n      currentPermission,\n    };\n\n    return this.dialog.open<EditPermissionsModalComponent, PermissionsDialogData, PermissionDialogResultModel>(\n      EditPermissionsModalComponent,\n      { data: dialogData },\n    ).afterClosed();\n  }\n\n  openGrantPermissionModal(entityType = EntityEnum.EXPERIMENT, entities: WithNameAndId[], targetName: string) {\n    return this.dialog.open<GrantPermissionModalComponent, GrantPermissionModalData, GrantPermissionModalResult>(\n      GrantPermissionModalComponent,\n      {\n        data: {\n          entityType,\n          entities,\n          targetName,\n        },\n      }).afterClosed();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}