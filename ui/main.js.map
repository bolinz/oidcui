{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/configs/api-urls.ts","./src/app/core/configs/core.ts","./src/app/core/configs/permissions.ts","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/index.ts","./src/app/shared/components/modals/access-key-modal/access-key-modal.component.ts","./src/app/shared/components/modals/access-key-modal/access-key-modal.component.html","./src/app/shared/components/modals/confirm-modal/confirm-modal.component.ts","./src/app/shared/components/modals/confirm-modal/confirm-modal.component.html","./src/app/shared/components/modals/edit-permissions-modal/edit-permissions-modal.component.ts","./src/app/shared/components/modals/edit-permissions-modal/edit-permissions-modal.component.html","./src/app/shared/components/modals/grant-permissoin-modal/grant-permission-modal.component.ts","./src/app/shared/components/modals/grant-permissoin-modal/grant-permission-modal.component.html","./src/app/shared/components/modals/grant-user-permissions/grant-user-permissions.component.ts","./src/app/shared/components/modals/grant-user-permissions/grant-user-permissions.component.html","./src/app/shared/components/table/table.component.ts","./src/app/shared/components/table/table.component.html","./src/app/shared/interceptors/error-handler.interceptor.ts","./src/app/shared/material/material.module.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/data/experiments-data.service.ts","./src/app/shared/services/data/models-data.service.ts","./src/app/shared/services/data/permission-data.service.ts","./src/app/shared/services/data/user-data.service.ts","./src/app/shared/services/index.ts","./src/app/shared/services/utility/snack-bar.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RoutePath } from './core/configs/core';\n\nconst routes: Routes = [\n  { path: RoutePath.Home,\n    loadChildren: () => import('./features/home-page/home-page.module').then(m => m.HomePageModule),\n    data: { breadcrumb: 'Home' }\n  },\n  {\n    path: RoutePath.Manage,\n    loadChildren: () => import('./features/admin-page/admin-page.module').then(m => m.AdminPageModule),\n    data: { breadcrumb: 'Manage' },\n  },\n  { path: '**', pathMatch: 'full', redirectTo: RoutePath.Home },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './shared/services';\nimport { UserDataService } from './shared/services';\nimport { finalize } from 'rxjs';\nimport { CurrentUserModel } from './shared/interfaces/user-data.interface';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  loading = false;\n  user!: CurrentUserModel;\n\n  constructor(\n    private readonly userDataService: UserDataService,\n    private readonly authService: AuthService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.loading = false;\n    this.userDataService.getCurrentUser()\n      .pipe(\n        finalize(() => this.loading = false),\n      )\n      .subscribe((userInfo) => {\n        this.authService.setUserInfo(userInfo);\n        this.user = userInfo;\n      });\n  }\n}\n","<ng-container *ngIf=\"!loading && this.user; else loader\">\n    <ml-header [name]=\"user.display_name\"></ml-header>\n  <div class=\"container\">\n    <div class=\"my-3\">\n        <xng-breadcrumb></xng-breadcrumb>\n    </div>\n    <router-outlet> </router-outlet>\n  </div>\n\n</ng-container>\n\n\n<ng-template #loader>\n  <div class=\"loader d-flex justify-content-center align-items-center\">\n    <mat-spinner></mat-spinner>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorHandlerInterceptor } from './shared/interceptors/error-handler.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorHandlerInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const API_URL = {\n  ALL_EXPERIMENTS: '/api/2.0/mlflow/experiments',\n  EXPERIMENTS_FOR_USER: '/api/2.0/mlflow/users/${userName}/experiments',\n  USERS_FOR_EXPERIMENT: '/api/2.0/mlflow/experiments/${experimentName}/users',\n  ALL_MODELS: '/api/2.0/mlflow/registered-models',\n  ALL_GROUPS: '/api/2.0/mlflow/groups',\n  EXPERIMENTS_FOR_GROUP: '/api/2.0/mlflow/groups/${groupName}/experiments',\n  MODELS_FOR_GROUP: '/api/2.0/mlflow/groups/${groupName}/registered-models',\n  MODELS_FOR_USER: '/api/2.0/mlflow/users/${userName}/registered-models',\n  USERS_FOR_MODEL: '/api/2.0/mlflow/registered-models/${modelName}/users',\n  CREATE_EXPERIMENT_PERMISSION: '/api/2.0/mlflow/experiments/permissions/create',\n  UPDATE_EXPERIMENT_PERMISSION: '/api/2.0/mlflow/experiments/permissions/update',\n  DELETE_EXPERIMENT_PERMISSION: '/api/2.0/mlflow/experiments/permissions/delete',\n  CREATE_MODEL_PERMISSION: '/api/2.0/mlflow/registered-models/permissions/create',\n  UPDATE_MODEL_PERMISSION: '/api/2.0/mlflow/registered-models/permissions/update',\n  DELETE_MODEL_PERMISSION: '/api/2.0/mlflow/registered-models/permissions/delete',\n\n  GET_ALL_USERS: '/api/2.0/mlflow/users',\n  GET_ACCESS_TOKEN: '/api/2.0/mlflow/users/access-token',\n  GET_CURRENT_USER: '/api/2.0/mlflow/users/current',\n\n  CREATE_GROUP_EXPERIMENT_PERMISSION: '/api/2.0/mlflow/groups/${groupName}/experiments/create',\n  DELETE_GROUP_EXPERIMENT_PERMISSION: '/api/2.0/mlflow/groups/${groupName}/experiments/delete',\n  UPDATE_GROUP_EXPERIMENT_PERMISSION: '/api/2.0/mlflow/groups/${groupName}/experiments/update',\n\n  CREATE_GROUP_MODEL_PERMISSION: '/api/2.0/mlflow/groups/${groupName}/registered-models/create',\n  DELETE_GROUP_MODEL_PERMISSION: '/api/2.0/mlflow/groups/${groupName}/registered-models/delete',\n  UPDATE_GROUP_MODEL_PERMISSION: '/api/2.0/mlflow/groups/${groupName}/registered-models/update',\n};\n","export const CORE_CONFIGS = {\n  SNACK_BAR_DURATION: 7_000,\n  DEBOUNCE_TIME: 300,\n}\n\nexport enum EntityEnum {\n  EXPERIMENT = 'experiment',\n  MODEL = 'model',\n  GROUP = 'group',\n}\n\nexport enum RoutePath {\n  Home = 'home',\n  Manage = 'manage',\n}\n","export enum PermissionEnum {\n  EDIT = 'EDIT',\n  READ = 'READ',\n  MANAGE = 'MANAGE',\n  NO_PERMISSIONS = 'NO_PERMISSIONS'\n}\n\nexport const PERMISSIONS = [\n  {\n    value: PermissionEnum.EDIT,\n    title: 'Edit'\n  },\n  {\n    value: PermissionEnum.READ,\n    title: 'Read'\n  },\n  {\n    value: PermissionEnum.MANAGE,\n    title: 'Manage'\n  },\n  {\n    value: PermissionEnum.NO_PERMISSIONS,\n    title: 'No permissions'\n  }\n]\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ml-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Input() name: string = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  logout() {\n    window.location.href = '/logout';\n  }\n}\n","<mat-toolbar color=\"primary\">\n\n    <div class=\"container d-flex align-items-center\">\n\n        <span class=\"pe-5 fs-16\">MLFlow Permission Manager</span>\n\n        <button mat-button [routerLink]=\"['/home']\">\n            <mat-icon>home</mat-icon>\n            Home\n        </button>\n        <button mat-button [routerLink]=\"['/manage']\">\n            <mat-icon>manage_accounts</mat-icon>\n            Manage Permissions\n        </button>\n        <span class=\"spacer\"></span>\n\n        <span class=\"pe-1 ms-auto fs-16\">Hello, {{name}}</span>\n        <button mat-button (click)=\"logout()\">\n            <mat-icon>exit_to_app</mat-icon>\n            <span>Logout</span>\n        </button>\n    </div>\n\n</mat-toolbar>\n","export * from './table/table.component';\nexport * from './header/header.component';\n\nexport * from './modals/edit-permissions-modal/edit-permissions-modal.component';\nexport * from './modals/grant-permissoin-modal/grant-permission-modal.component';\nexport * from './modals/access-key-modal/access-key-modal.component';\nexport * from './modals/grant-user-permissions/grant-user-permissions.component';\nexport * from './modals/confirm-modal/confirm-modal.component';\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AccessKeyDialogData } from './access-key-modal.interface';\n\n@Component({\n  selector: 'ml-access-key-modal',\n  templateUrl: './access-key-modal.component.html',\n  styleUrls: ['./access-key-modal.component.scss']\n})\nexport class AccessKeyModalComponent implements OnInit {\n  token: string = '';\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: AccessKeyDialogData,\n  ) { }\n\n  ngOnInit(): void {\n    this.token = this.data.token;\n  }\n\n  copyInputMessage(userInput: HTMLInputElement) {\n    userInput.select();\n    document.execCommand('copy');\n    userInput.setSelectionRange(0, 0);\n  }\n}\n","<h2 mat-dialog-title>Access Key</h2>\n\n<mat-dialog-content>\n  <mat-form-field>\n    <mat-label>Access Key</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"token\" #apiKeyInput readonly>\n    <button matSuffix mat-icon-button cdkFocusInitial aria-label=\"copy\" (click)=\"copyInputMessage(apiKeyInput)\" >\n      <mat-icon>content_copy</mat-icon>\n    </button>\n  </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"null\" >Ok</button>\n</mat-dialog-actions>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ml-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.scss']\n})\nexport class ConfirmModalComponent {\n\n}\n","<h2 mat-dialog-title>Action confirmations</h2>\n<mat-dialog-content class=\"d-flex flex-column\">\n    Please confirm your action\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"false\">Cancel</button>\n    <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>Ok</button>\n</mat-dialog-actions>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\n\nimport { PERMISSIONS } from 'src/app/core/configs/permissions';\nimport { PermissionsDialogData } from './edit-permissions-modal.interface';\n\n@Component({\n  selector: 'ml-edit-permissions-modal',\n  templateUrl: './edit-permissions-modal.component.html',\n  styleUrls: ['./edit-permissions-modal.component.scss']\n})\nexport class EditPermissionsModalComponent implements OnInit {\n  permissions = PERMISSIONS;\n  title: string = '';\n  permission: FormControl = new FormControl();\n\n  constructor(\n    public dialogRef: MatDialogRef<EditPermissionsModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: PermissionsDialogData,\n    private readonly fb: FormBuilder,\n  ) {}\n\n  ngOnInit(): void {\n    this.title = `Edit ${this.data.entity} permissions for ${this.data.targetEntity}`;\n    this.permission = this.fb.control(this.data.currentPermission, Validators.required);\n  }\n}\n","<h2 mat-dialog-title>{{title}}</h2>\n<mat-dialog-content class=\"d-flex flex-column\">\n  <mat-form-field cdkFocusInitial>\n    <mat-label>Permissions</mat-label>\n    <select matNativeControl [formControl]=\"permission\">\n      <option *ngFor=\"let permission of permissions\" [value]=\"permission.value\">{{permission.title}}</option>\n    </select>\n  </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"null\">Cancel</button>\n  <button mat-button [mat-dialog-close]=\"permission.value\">Ok</button>\n</mat-dialog-actions>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PermissionEnum, PERMISSIONS } from 'src/app/core/configs/permissions';\nimport { GrantPermissionModalData } from './grant-permission-modal.inteface';\n\n@Component({\n  selector: 'ml-grant-permission-modal',\n  templateUrl: './grant-permission-modal.component.html',\n  styleUrls: ['./grant-permission-modal.component.scss']\n})\nexport class GrantPermissionModalComponent implements OnInit {\n  grantPermissionForm!: FormGroup;\n\n  permissions = PERMISSIONS;\n  title: string = '';\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: GrantPermissionModalData,\n    private readonly fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.title = `Grant ${this.data.entityType} permissions for ${this.data.targetName}`;\n    this.grantPermissionForm = this.fb.group({\n      permission: [PermissionEnum.READ, Validators.required],\n      entity: [null, Validators.required],\n    })\n  }\n\n  compareEntities(c1: any, c2: any) {\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\n  }\n}\n","<h2 mat-dialog-title>{{ title }}</h2>\n<mat-dialog-content [formGroup]=\"grantPermissionForm\">\n    <div class=\"d-flex flex-column\">\n        <mat-form-field cdkFocusInitial>\n            <mat-label>{{ data.entityType | titlecase }}</mat-label>\n            <select matNativeControl formControlName=\"entity\" [compareWith]=\"compareEntities\">\n                <ng-container *ngFor=\"let entity of data.entities\">\n                    <option [ngValue]=\"entity\">{{ entity.name }}</option>\n                </ng-container>\n            </select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Permissions</mat-label>\n            <select matNativeControl formControlName=\"permission\">\n                <option *ngFor=\"let permission of permissions\" [value]=\"permission.value\">{{ permission.title }}\n                </option>\n            </select>\n        </mat-form-field>\n    </div>\n\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"null\">Cancel</button>\n  <button mat-button [mat-dialog-close]=\"grantPermissionForm.value\" [disabled]=\"grantPermissionForm.invalid\">Ok</button>\n</mat-dialog-actions>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PermissionEnum, PERMISSIONS } from '../../../../core/configs/permissions';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\nexport interface GrantUserPermissionsModel {\n  users: string[];\n}\n\n@Component({\n  selector: 'ml-grant-user-permissions',\n  templateUrl: './grant-user-permissions.component.html',\n  styleUrls: ['./grant-user-permissions.component.scss']\n})\nexport class GrantUserPermissionsComponent implements OnInit {\n  form!: FormGroup;\n\n  permissions = PERMISSIONS;\n  title: string = '';\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: GrantUserPermissionsModel,\n    private readonly fb: FormBuilder,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.title = `Grant permissions`;\n    this.form = this.fb.group({\n      user: [null, Validators.required],\n      permission: [PermissionEnum.READ, Validators.required],\n    })\n  }\n}\n","<h2 mat-dialog-title>{{title}}</h2>\n<mat-dialog-content [formGroup]=\"form\">\n    <div class=\"d-flex flex-column\">\n        <mat-form-field>\n            <mat-label>Users</mat-label>\n            <select matNativeControl formControlName=\"user\">\n                <option *ngFor=\"let user of data.users\" [value]=\"user\">{{user}}</option>\n            </select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Permissions</mat-label>\n            <select matNativeControl formControlName=\"permission\">\n                <option *ngFor=\"let permission of permissions\" [value]=\"permission.value\">{{permission.title}}</option>\n            </select>\n        </mat-form-field>\n    </div>\n\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"null\">Cancel</button>\n    <button mat-button [mat-dialog-close]=\"form.value\" cdkFocusInitial [disabled]=\"form.invalid\">Ok</button>\n</mat-dialog-actions>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { TableActionEvent, TableActionModel, TableColumnConfigModel } from './table.interface';\n\n@Component({\n  selector: 'ml-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n})\nexport class TableComponent<T> implements OnInit, OnChanges {\n  @Input() columnConfig: TableColumnConfigModel[] = [];\n  @Input() data: T[] = [];\n  @Input() actions: TableActionModel[] = [];\n\n  @Output() action = new EventEmitter<TableActionEvent<T>>();\n\n  dataSource: MatTableDataSource<T> = new MatTableDataSource<T>();\n  columns: string[] = [];\n\n  serachValue: string = '';\n\n  readonly columnActionName = 'actions';\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const data = changes['data'].currentValue;\n    if (data) {\n      this.dataSource = new MatTableDataSource(data);\n    }\n  }\n\n  ngOnInit(): void {\n    const columnKeys = this.columnConfig.map(config => config.key);\n\n    this.dataSource = new MatTableDataSource(this.data);\n    this.columns = columnKeys;\n    this.actions.length\n      ? this.columns = [this.columnActionName, ...columnKeys]\n      : this.columns = columnKeys;\n  }\n\n\n  filter(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    this.dataSource.filter = inputElement.value.trim().toLowerCase();\n  }\n\n  handleActionClick(item: T, action: TableActionModel) {\n    this.action.emit({ item, action });\n  }\n}\n","<div class=\"search-section\">\n  <mat-form-field>\n    <mat-label>Search</mat-label>\n    <input matInput type=\"text\" (keyup)=\"filter($event)\" #search>\n<!--    <button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"search.value=''\" *ngIf=\"search.value\">-->\n<!--      <mat-icon>close</mat-icon>-->\n<!--    </button>-->\n  </mat-form-field>\n</div>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"w-100\">\n\n  <ng-container *ngFor=\"let column of columnConfig\">\n    <ng-container [matColumnDef]=\"column.key\">\n      <th mat-header-cell *matHeaderCellDef> {{column.title}}</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element[column.key]}} </td>\n    </ng-container>\n  </ng-container>\n\n\n  <!--Actions column-->\n  <ng-container [matColumnDef]=\"columnActionName\">\n    <th mat-header-cell *matHeaderCellDef>Actions</th>\n    <td mat-cell *matCellDef=\"let item\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <ng-container *ngFor=\"let action of actions\">\n          <button mat-menu-item (click)=\"handleActionClick(item, action)\">\n            <mat-icon>{{action.icon}}</mat-icon>\n            <span>{{action.name}}</span>\n          </button>\n        </ng-container>\n      </mat-menu>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n\n</table>\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { SnackBarService } from '../services';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  constructor(\n    private readonly snackBarService: SnackBarService,\n  ) {\n  }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request)\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          let errorMessage = (error.error instanceof ErrorEvent)\n            ? `Error: ${error.error.message}`\n            : `Error Code: ${error.status}\\nMessage: ${error.message}`;\n\n          this.snackBarService.openSnackBar(errorMessage);\n          return throwError(() => new Error(errorMessage));\n        }),\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatDividerModule } from '@angular/material/divider';\n\nconst MATERIAL_MODULES = [\n  MatTableModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatIconModule,\n  MatButtonModule,\n  MatTabsModule,\n  MatMenuModule,\n  MatDialogModule,\n  MatProgressSpinnerModule,\n  MatSnackBarModule,\n  MatToolbarModule,\n  MatBadgeModule,\n  MatDividerModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    ...MATERIAL_MODULES,\n  ],\n  exports: [\n    ...MATERIAL_MODULES,\n  ],\n})\nexport class MaterialModule {}\n","import { Injectable } from '@angular/core';\nimport { CurrentUserModel } from '../interfaces/user-data.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private user!: CurrentUserModel;\n\n  constructor() {\n  }\n\n  getUserInfo(): CurrentUserModel {\n    return this.user;\n  }\n\n  setUserInfo(user: CurrentUserModel) {\n    this.user = user;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\n\nimport {\n  ExperimentModel,\n  ExperimentsForUserModel,\n  UserPermissionModel,\n} from '../../interfaces/experiments-data.interface';\nimport { API_URL } from 'src/app/core/configs/api-urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExperimentsDataService {\n\n  constructor(\n    private readonly http: HttpClient,\n  ) {\n  }\n\n  getAllExperiments() {\n    return this.http.get<ExperimentModel[]>(API_URL.ALL_EXPERIMENTS);\n  }\n\n  getExperimentsForUser(userName: string) {\n    const url = API_URL.EXPERIMENTS_FOR_USER.replace('${userName}', userName);\n    return this.http.get<ExperimentsForUserModel>(url)\n      .pipe(\n        map(({ experiments }) => experiments)\n      );\n  }\n\n  getUsersForExperiment(experimentName: string) {\n    const url = API_URL.USERS_FOR_EXPERIMENT.replace('${experimentName}', experimentName);\n    return this.http.get<UserPermissionModel[]>(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs';\n\nimport { ModelModel, ModelPermissionsModel, ModelUserListModel } from '../../interfaces/models-data.interface';\nimport { API_URL } from 'src/app/core/configs/api-urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelsDataService {\n\n  constructor(\n    private readonly http: HttpClient,\n  ) {\n  }\n\n  getAllModels() {\n    return this.http.get<ModelModel[]>(API_URL.ALL_MODELS);\n  }\n\n  getModelsForUser(userName: string) {\n    const url = API_URL.MODELS_FOR_USER.replace('${userName}', userName);\n    return this.http.get<ModelPermissionsModel>(url)\n      .pipe(\n        map(response => response.models),\n      );\n  }\n\n  getUsersForModel(modelName: string) {\n    const url = API_URL.USERS_FOR_MODEL.replace('${modelName}', modelName);\n    return this.http.get<ModelUserListModel[]>(url);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  CreateExperimentPermissionRequestBodyModel,\n  CreateModelPermissionRequestBodyModel,\n} from 'src/app/shared/interfaces/permission-data.interface';\nimport { API_URL } from 'src/app/core/configs/api-urls';\nimport { PermissionEnum } from '../../../core/configs/permissions';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionDataService {\n\n  constructor(\n    private readonly http: HttpClient,\n  ) {\n  }\n\n  createExperimentPermission(body: CreateExperimentPermissionRequestBodyModel) {\n    return this.http.post(API_URL.CREATE_EXPERIMENT_PERMISSION, body, { responseType: 'text' });\n  }\n\n  updateExperimentPermission(body: { experiment_id: string, user_name: string, permission: string }) {\n    return this.http.patch(API_URL.UPDATE_EXPERIMENT_PERMISSION, body, { responseType: 'text' });\n  }\n\n  deleteExperimentPermission(body: { experiment_id: string, user_name: string }) {\n    return this.http.delete(API_URL.DELETE_EXPERIMENT_PERMISSION, { body });\n  }\n\n  createModelPermission(body: CreateModelPermissionRequestBodyModel) {\n    return this.http.post(API_URL.CREATE_MODEL_PERMISSION, body);\n  }\n\n  updateModelPermission(body: { user_name: string, name: string, permission: string }) {\n    return this.http.patch(API_URL.UPDATE_MODEL_PERMISSION, body, { responseType: 'text' });\n  }\n\n  deleteModelPermission(body: { name: string, user_name: string }) {\n    return this.http.delete(API_URL.DELETE_MODEL_PERMISSION, { body });\n  }\n\n  addExperimentPermissionToGroup(groupName: string, experiment_id: string, permission: PermissionEnum) {\n    return this.http.post(\n      API_URL.CREATE_GROUP_EXPERIMENT_PERMISSION.replace('${groupName}', groupName),\n      {\n        experiment_id,\n        permission,\n      });\n  }\n\n  addModelPermissionToGroup(modelName: string, groupName: string, permission: string) {\n    return this.http.post(\n      API_URL.CREATE_GROUP_MODEL_PERMISSION.replace('${groupName}', groupName),\n      {\n        model_name: modelName,\n        permission,\n      });\n  }\n\n  removeExperimentPermissionFromGroup(groupName: string, experiment_id: string) {\n    return this.http.delete(\n      API_URL.DELETE_GROUP_EXPERIMENT_PERMISSION.replace('${groupName}', groupName),\n      {\n        body: {\n          experiment_id\n        }\n      });\n  }\n\n  removeModelPermissionFromGroup(modelName: string, groupName: string) {\n    return this.http.delete(\n      API_URL.DELETE_GROUP_MODEL_PERMISSION.replace('${groupName}', groupName),\n      {\n        body: {\n          model_name: modelName\n        }\n      });\n  }\n\n  updateExperimentPermissionForGroup(groupName: string, experiment_id: string, permission: string) {\n    return this.http.patch(\n      API_URL.UPDATE_GROUP_EXPERIMENT_PERMISSION.replace('${groupName}', groupName),\n      {\n        experiment_id,\n        permission\n      });\n  }\n\n  updateModelPermissionForGroup(modelName: string, groupName: string, permission: string) {\n    return this.http.patch(\n      API_URL.UPDATE_GROUP_MODEL_PERMISSION.replace('${groupName}', groupName),\n      {\n        model_name: modelName,\n        permission\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AllUsersListModel, CurrentUserModel, TokenModel } from '../../interfaces/user-data.interface';\nimport { API_URL } from 'src/app/core/configs/api-urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  constructor(\n    private readonly http: HttpClient,\n  ) { }\n\n  getCurrentUser() {\n    return this.http.get<CurrentUserModel>(API_URL.GET_CURRENT_USER);\n  }\n\n  getAccessKey() {\n    return this.http.get<TokenModel>(API_URL.GET_ACCESS_TOKEN);\n  }\n\n  getAllUsers() {\n    return this.http.get<AllUsersListModel>(API_URL.GET_ALL_USERS);\n  }\n}\n","export * from './data/models-data.service';\nexport * from './data/user-data.service';\nexport * from './data/experiments-data.service';\nexport * from './data/permission-data.service';\nexport * from  './utility/snack-bar.service';\nexport * from './auth.service';\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CORE_CONFIGS } from '../../../core/configs/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackBarService {\n\n  constructor(\n    private readonly snackBarService: MatSnackBar,\n  ) { }\n\n  openSnackBar(message: string) {\n    return this.snackBarService.open(message, 'OK', {\n      duration: CORE_CONFIGS.SNACK_BAR_DURATION\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  AccessKeyModalComponent,\n  ConfirmModalComponent,\n  EditPermissionsModalComponent,\n  GrantPermissionModalComponent,\n  GrantUserPermissionsComponent,\n  HeaderComponent,\n  TableComponent,\n} from './components';\nimport { MaterialModule } from './material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BreadcrumbModule } from 'xng-breadcrumb';\n\nconst SHARED_COMPONENTS = [\n  AccessKeyModalComponent,\n  ConfirmModalComponent,\n  EditPermissionsModalComponent,\n  GrantPermissionModalComponent,\n  GrantUserPermissionsComponent,\n  HeaderComponent,\n  TableComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...SHARED_COMPONENTS,\n  ],\n  exports: [\n    ...SHARED_COMPONENTS,\n\n    MaterialModule,\n    BreadcrumbModule,\n  ],\n  imports: [\n    MaterialModule,\n    CommonModule,\n    FormsModule,\n    NgbModule,\n    RouterLinkWithHref,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterLink,\n    BreadcrumbModule,\n  ],\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}